#!/bin/bash

VERSION=$1

if [ "$VERSION" == "" ]; then
    echo "HDHRDVR VERSION must be provided as argument."
    exit 1
fi

# Use spectool to get sources if needed and available
if [ ! -f "SOURCES/hdhomerun_record_linux_$VERSION" -a -x /usr/bin/spectool ]; then
  /usr/bin/spectool -d "HDHRDVR_VERSION $VERSION" -g -s 0 -C SOURCES SPECS/hdhomerun-record.spec
fi

if [ ! -f "SOURCES/hdhomerun_record_linux_$VERSION" ]; then
    echo "SOURCES/hdhomerun_record_linux_$VERSION binary not found."
    exit 1
fi

PKGMGR=''
if [ ! -x "/usr/bin/dnf" ]; then
    PKGMGR='--yum'
fi

HOSTARCH=`arch`
if [ "$HOSTARCH" == "armv7l" ]; then
    HOSTARCH='armhfp'
fi

TARGETRPMARCH=("i686" "x86_64" "armhfp" "aarch64")

EL=(`ls build_cfgs/ | grep "centos-[[:digit:]]\\+-$HOSTARCH.cfg" | sed -n "s/centos-\([0-9]\+\)-$HOSTARCH.cfg/\1/p" | sort -n`)
ELBASE=${EL[0]}
FC=(`ls /etc/mock/ | grep "fedora-[[:digit:]]\\+-$HOSTARCH.cfg" | sed -n "s/fedora-\([0-9]\+\)-$HOSTARCH.cfg/\1/p" | sort -n | tail -3`)
FCBASE=${FC[0]}

# Create resultdir directories
for el in ${EL[@]}
do
    for arch in ${TARGETRPMARCH[@]}
    do
        if [ $el -eq 6 ] && [ "$arch" == "armhfp" ]; then
            continue
        fi
        if [ $el -eq 6 ] && [ "$arch" == "aarch64" ]; then
            continue
        fi
        if [ "$arch" == 'i686' ]; then
            arch='i386'
        fi
        mkdir -p RPMS/el/$el/$arch
    done
done
for fc in ${FC[@]}
do
    for arch in ${TARGETRPMARCH[@]}
    do
        if [ "$arch" == 'i686' ]; then
            arch='i386'
        fi
        mkdir -p RPMS/fedora/$fc/$arch
    done
done

# Build src.rpm
SRCDIR=`mktemp -d`
/usr/bin/mock -r build_cfgs/centos-$ELBASE-$HOSTARCH.cfg --define "HDHRDVR_VERSION $VERSION" --define "dist %{nil}" --buildsrpm --spec=SPECS/hdhomerun-record.spec --sources=SOURCES --resultdir=$SRCDIR --disable-plugin=ccache $PKGMGR
if [ ! $? -eq 0 ]; then
    echo "Build failed, logs in $RESULTDIR"
    exit 1
fi
SRCRPM=`ls $SRCDIR/*$VERSION*.src.rpm`
if [ ! -f "$SRCRPM" ]; then
    echo "Source RPM was not built"
    exit 1
fi

# Build arch specific rpms
for fc in ${FC[@]}
do
    for arch in ${TARGETRPMARCH[@]}
    do
        rpmresultarch=$arch
        rpmtargetarch=$arch
        if [ "$arch" == "i686" ]; then
            rpmresultarch="i386"
        fi
        if [ "$arch" == "armhfp" ]; then
            rpmtargetarch=armv7hl
        fi
        RESULTDIR=`mktemp -d`
        /usr/bin/mock -r fedora-$fc-$HOSTARCH --define "HDHRDVR_VERSION $VERSION" --target=$rpmtargetarch --define "dist .fc$fc" --resultdir=$RESULTDIR --disable-plugin=ccache $PKGMGR $SRCRPM
        if [ ! $? -eq 0 ]; then
            echo "Build failed, logs in $RESULTDIR"
            exit 1
        fi
        cp $RESULTDIR/*.$rpmtargetarch.rpm RPMS/fedora/$fc/$rpmresultarch/
        rm -f $RESULTDIR/*.log
        rm -f $RESULTDIR/*.rpm
        rmdir $RESULTDIR
    done
done

for el in ${EL[@]}
do
    for arch in ${TARGETRPMARCH[@]}
    do
        if [ $el -eq 6 ] && [ "$arch" == "armhfp" ]; then
            continue
        fi
        if [ $el -eq 6 ] && [ "$arch" == "aarch64" ]; then
            continue
        fi
        rpmresultarch=$arch
        rpmtargetarch=$arch
        if [ "$arch" == "i686" ]; then
            rpmresultarch="i386"
        fi
        if [ "$arch" == "armhfp" ]; then
            rpmtargetarch=armv7hl
        fi
        RESULTDIR=`mktemp -d`
        /usr/bin/mock -r build_cfgs/centos-$el-$HOSTARCH.cfg --define "HDHRDVR_VERSION $VERSION" --target=$rpmtargetarch --define "dist .el$el" --resultdir=$RESULTDIR --disable-plugin=ccache $PKGMGR $SRCRPM
        if [ ! $? -eq 0 ]; then
            echo "Build failed, logs in $RESULTDIR"
            exit 1
        fi
        cp $RESULTDIR/*.$rpmtargetarch.rpm RPMS/el/$el/$rpmresultarch/
        rm -f $RESULTDIR/*.log
        rm -f $RESULTDIR/*.rpm
        rmdir $RESULTDIR
    done
done

# Clean up after ourselves
rm -f $SRCDIR/*.log
rm -f $SRCDIR/*.rpm
rmdir $SRCDIR
